 import speech_recognition as sr
import pyttsx3
import datetime
import pywhatkit
import pyaudio

# Initialize the text-to-speech engine
engine = pyttsx3.init()
engine.setProperty('rate', 150)  # Speech speed
engine.setProperty('volume', 1.0)  # Max volume

# Optional: Set voice (try voices[0] or voices[1] depending on system)
voices = engine.getProperty('voices')
engine.setProperty('voice', voices[0].id)

def talk(text):
    print(f"Assistant: {text}")  # Debug print
    engine.say(text)
    engine.runAndWait()

def listen():
    listener = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        listener.adjust_for_ambient_noise(source)
        audio = listener.listen(source)

    try:
        command = listener.recognize_google(audio)
        command = command.lower().strip()
        print(f"You said: {command}")
    except sr.UnknownValueError:
        talk("Sorry, I did not understand that.")
        return ""
    except sr.RequestError:
        talk("Network error.")
        return ""

    return command

def run_assistant():
    talk("Hello, how can I help you?")
    while True:
        command = listen()

        if 'hello' in command:
            talk("Hi there!")

        elif 'time' in command:
            current_time = datetime.datetime.now().strftime('%I:%M %p')
            talk(f"The current time is {current_time}")

        elif 'date' in command:
            current_date = datetime.datetime.now().strftime('%A, %B %d, %Y')
            talk(f"Today is {current_date}")

        elif 'search for' in command:
            topic = command.replace('search for', '').strip()
            talk(f"Searching the web for {topic}")
            pywhatkit.search(topic)

        elif 'play' in command:
            song = command.replace('play', '').strip()
            talk(f"Playing {song} on YouTube")
            pywhatkit.playonyt(song)

        elif 'stop' in command or 'exit' in command:
            talk("Goodbye!")
            break

        elif command:
            talk("I didn't catch that. Please try again.")

# Start the assistant
run_assistant()
